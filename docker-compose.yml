version: '3'
services:
  nginx-proxy:
      image: jwilder/nginx-proxy:alpine
      restart: unless-stopped
      ports:
        - "80:80" 
        - "443:443"
      networks:
        - nginx-proxy 
      labels:
        - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy" 
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - "nginx-conf:/etc/nginx/conf.d"
        - "nginx-vhost:/etc/nginx/vhost.d"
        - "html:/usr/share/nginx/html"
        - "certs:/etc/nginx/certs:ro"
      depends_on:
        - jenkins
  
  letsencrypt-nginx-proxy-companion:
      image: jrcs/letsencrypt-nginx-proxy-companion
      restart: unless-stopped
      container_name: letsencrypt-nginx-proxy-companion
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
        - "nginx-conf:/etc/nginx/conf.d"
        - "nginx-vhost:/etc/nginx/vhost.d"
        - "html:/usr/share/nginx/html"
        - "certs:/etc/nginx/certs:rw"
      depends_on: 
          - nginx-proxy

  jenkins:
    container_name: jenkins
    build:
      context: docker
    restart: unless-stopped
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=jenkins.your.domain.com
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=jenkins.your.domain.com
      - LETSENCRYPT_EMAIL=support@email.com
    volumes:
      - "/home/jenkins_home:/var/jenkins_home"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - nginx-proxy

networks:
  nginx-proxy: 
volumes: 
    nginx-conf:
    nginx-vhost:
    html:
    certs: